                        //整体框架


1.纵向

    网络层----数据层----表示层

        网络层：AFNewworking网络框架，调用API,通过异步请求提高客户端流畅度，post请求提高数据的安全性，利用HTTP缓存机制尽量减少网络请求次数以缓解服务器的高并发；
            
        数据层：将数据分类，利用CoreData持久化存储长期不变的数据，优先从本地加载数据，以减少对服务器的访问频率；

        表示层：Masonry库对界面进行布局以自适应不同设备；

2.横向

    Model---View---Controller

        Model：封装数据，实现业务逻辑；

        View：  展示数据，提供交互；

        Controller：控制Model层与View层之间的数据交换，处理用户操作；
        
        
                        //核心功能业务逻辑
                        
                        
1.帐户管理（注册、登录、退出）
    
    注册：
    
        将账号、密码、验证码通过post请求发送给后台，后台通过判断后返回注册结果；
        
    登录：
    
        
    
